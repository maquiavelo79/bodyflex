
-- CALL SP_WPRO_INGRESA_MENSAJE_PROFESIONAL('13661574', '13661574', 'x', 'x', 'PROFESIONAL', 'pro@bo.cl', 'pro@bo.cl', @codErr);
-- SELECT @codErr;
-- SELECT * FROM PROFESIONAL_MENSAJE

DROP PROCEDURE IF EXISTS bodyflex.SP_CAT_INGRESA_SOLICITUD_SOPORTE;
CREATE PROCEDURE bodyflex.`SP_CAT_INGRESA_SOLICITUD_SOPORTE`( 
                                                    IN rutOri VARCHAR(10)
                                                  , IN msg VARCHAR(2000)
                                                  , IN asu VARCHAR(100)
                                                  , IN rol VARCHAR(100) -- ROL QUE ENVÍA EL MENSAJE
                                                  , IN email VARCHAR(100) -- email de quien contacta al profesional
                                                  , OUT codErr INTEGER
                                                )
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION SET codErr=99;
SET codErr=0;

-- 1° AGREGAMOS INCIDENTE
INSERT INTO INCIDENTE (pRut, ei_Id, incFec) VALUES (rutOri, 1, now());
SET @INC_ID=(SELECT INCID FROM INCIDENTE ORDER BY INCID DESC LIMIT 1);

-- 2° OBTENEMOS ALIAS
CASE rol
  WHEN 'PROFESIONAL' THEN
    SET @alOri = (SELECT PALIAS FROM PROFESIONAL WHERE PRUT = rutOri);  
  WHEN 'USUARIO' THEN 
    SET @alOri = (SELECT UALIAS FROM USUARIO WHERE URUT = rutOri);
  WHEN 'COMPLEMENTADOR' THEN
    SET @alOri = (SELECT COMPREALI FROM COMPLEMENTADOR WHERE COMPRUT = rutOri); 
  ELSE 
    SET @alOri = (SELECT RALIAS FROM INTERNO WHERE RRUT = rutOri); 
END CASE;

SET @RUT_DES=(SELECT PARVAL FROM PARAMETROS WHERE PARNOM='RUT_SOPORTE');
SET @MAIL_DES=(SELECT PARVAL FROM PARAMETROS WHERE PARNOM='MAIL_SOPORTE');
SET @alDes = (SELECT PALIAS FROM PROFESIONAL WHERE PRUT=@RUT_DES);

-- 3° OBTENEMOS KEY DEL CONTACTO
IF EXISTS(SELECT DISTINCT MKEY FROM PROFESIONAL_MENSAJE ORDER BY MKEY DESC LIMIT 1) THEN 
  SET @KEY = (SELECT DISTINCT MKEY FROM PROFESIONAL_MENSAJE ORDER BY MKEY DESC LIMIT 1)+1;
ELSE
  SET @KEY=1;
END IF;

-- 4° INGRESAMOS MENSAJE
INSERT INTO PROFESIONAL_MENSAJE (MRORI, MRDES, MFEC, MLEI, MTIP, MCOR, MKEY, MMEN, MASU, MAORI, MADES, MMAIL, mMailDes, incId) 
VALUES (rutOri, @RUT_DES, NOW(), 0, 'I', 1, @KEY, msg, asu, @alOri, @alDes, email, @MAIL_DES, @INC_ID);

END;
